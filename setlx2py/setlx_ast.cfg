#-----------------------------------------------------------------
# setlx2py:  setlx_ast_gen.cfg
#
# Defines the AST Node classes used in setlx2py.
# 
# Each entry is a Node sub-class name, listing the attributes
# and child nodes of the class:
#   <name>*     - a child node
#   <name>**    - a sequence of child nodes
#
#   <name>      - an attribute
#
# Copyright (C) 2013, Jan-Christoph Klie
# License: Apache v2
#-----------------------------------------------------------------

As : [expr*]
Assert: [cond*, expr*]
ArgumentList : [arguments**]
Assignment: [op, target*, right*]
AttributeRef : [obj*, field*] 
BinaryOp: [op, left*, right*]
Backtrack: []
Block: [stmts**]
Break: []
CachedProcedure: [params*, body*]
Call : [name*, args*]
Case: [cond*, block*]
CaseList : [cases**]
Class: [name*, params*, block*, static*]
Comprehension : [klass, expr*, iterators*, cond*]
Continue: []
Constant: [klass, value]
Default: [block*]
DoWhile: [cond*, body*]
Exit: []
ExprList: [exprs**]
FileAST: [stmts**]
For: [iterator_chain*, body*]
If: [cond*, iftrue*, iffalse*]
Iterator: [assignable*, expression*]
IteratorChain: [iterators**]
Lambda: [params*, body*]
List: [items**]
Match: [matchee*, case_list*, default*]
MatchCase: [expr*, cond*, block*]
Param : [name]
ParamList : [params**]
Pattern: [left*, right*]
Procedure: [params*, body*]
Quantor: [name, lhs*, cond*]
Range : [klass, lower*, upper*, step*]
Regex : [expr*, as_expr*, cond*, block*]
Return : [expr*]
Scan: [expr*, using*, regex_list*, default*]
Set: [items**]
Slice : [obj*, lower*, upper*]
Subscription: [obj*, subscript*]
Switch : [case_list*, default*]
TargetList : [targets**]
Term: [name, args*]
UnaryOp: [op, expr*]
Identifier: [name]
While: [cond*, body*]
