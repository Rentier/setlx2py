// 
// Project Euler problem 49 in SETL
//
// """  
// The arithmetic sequence, 1487, 4817, 8147, in which each of the terms 
// increases by 3330, is unusual in two ways: (i) each of the three terms are 
// prime, and, (ii) each of the 4-digit numbers are permutations of one another.
//
// There are no arithmetic sequences made up of three 1-, 2-, or 3-digit primes, 
// exhibiting this property, but there is one other 4-digit increasing sequence.
//
// What 12-digit number do you form by concatenating the three terms 
// in this sequence?
//
// """
//
// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

is_prime := procedure(n) {
  if (n == 2 || n == 3) {
    return(true);
  }
  if (n % 2 == 0) {
    return(false);
  }
  for (i in [3,5..round(sqrt(n))+1]) {
    if (n % i == 0) {
      return(false);
    }
  }
  return(true);
};


// Permutation (exhaustive)
perms2 := procedure(s) {
  if (s == []) {
    return [[]];
  } else {
    return [ [a]+b : a in s, b in perms2([ p : p in s | p != a]) ];
  }

};

// this contains only numbers > 1000 and primes
all_permutations := procedure(p) {
  ll := [];
  // get the index of p in all permutations of 1..#p
  for (pp in perms2([1..#p])) {
    p3 := int(+/[str(p[pp[i]]) : i in [1..#pp]]);
    if (p[1] > 0 && is_prime(p3)) {
      ll += [p3];
    }
  }
  
  return(ll);
  
};


get_element := procedure(n, ll, diff) {
  res := 0;
  for (p in ll) {
    if (p > n && p-n == diff) {
      res := p;
    }
  }
  
  return(res);

};


check_perms := procedure(n, diff) {

  all_perms := all_permutations([int(i) : i in str(n)]); 
  if (all_perms == []) {
    return([]);
  }
  
  ll := [];
  p1 := p2 := 0;
  p1 := get_element(n, all_perms, diff);
  if (p1 > 0) {
    p2 := get_element(p1, all_perms, diff);
  }
  
  if (p2 > 0) {
    ll := [n, p1, p2];
  }
  
  return(ll);
};

problem49 := procedure() {
  diff := 3330;
  for (n in [1001,1003..9999]) {
    if (is_prime(n)) {
      c := check_perms(n, diff);
      if (c != []) {
        print(c);
        if (n != 1487) {
          res := c;
        }
      }
    }
  }
  
  result := +/[str(i) : i in res];
  print("terms:", res);
  print("result:", result);
  
};

problem49();

