// 
// Project Euler problem 10 in SETL
//
//
// Problem 10
// """ 
// The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.
// 
// Find the sum of all the primes below two million.
// """
//
// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

problem10 := procedure() {
  print("Problem 10: ");
  n := 2000000;
  primes := [1..n];
  for (i in [2..n]) {
    if (primes[i] == 0) {
      continue;
    }
    j := 2;
    while (i * j <= n) {
      primes[i * j] := 0;
      j := j + 1;
    }
  }
  
  print(+/primes[2..n]);
  
};


// Using sets
problem10b := procedure() {
  print("Problem 10: ");
  n := 2000000;
  primes := {2..n};
  twos := {2*i : i in {2..n\2}};
  primes -= twos;
  i := 3;
  while (i < n \ i) {
    x := {i*k : k in {i..n\i}};        
    primes -= x;
    i += 2;
  }
  print(+/primes);
  
};

problem10c := procedure() {
  print("Problem 10c: ");
  n := 2000000;
  primes := [1 .. n];
  for (i in [2 .. n/2]) { // Here is a change vs problem10
    if (primes[i] == 0) {
      continue;
    }
    j := i; // Here is a change vs problem10
    while (i * j <= n) {
      primes[i * j] := 0;
      j := j + 1;
    }
  }
  
  print(+/primes[2..n]);
};


problem10();
problem10b();
problem10c();

