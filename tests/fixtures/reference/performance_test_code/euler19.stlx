//
// Euler problem 19
//
// """
// You are given the following information, but you may prefer 
// to do some research for yourself.
//
// * 1 Jan 1900 was a Monday.
// * Thirty days has September,
//   April, June and November.
//   All the rest have thirty-one,
//   Saving February alone,
//   Which has twenty-eight, rain or shine.
//   And on leap years, twenty-nine.
// * A leap year occurs on any year evenly divisible by 4, but not 
//   on a century unless it is divisible by 400.
// 
// How many Sundays fell on the first of the month during the 
// twentieth century (1 Jan 1901 to 31 Dec 2000)?
// """
// 
//  This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com).
//  See also my SETL page: http://www.hakank.org/setl/
//


//
// Converting Julian date <-> Gregorian date from:
// http://www.hermetic.ch/cal_stud/jdn.htm
//
date2julian := procedure(y,m,d) {
    jd := ( 1461 * ( y + 4800 + ( m - 14 ) \ 12 ) )  \  4 +
          ( 367 * ( m - 2 - 12 * ( ( m - 14 )  \  12 ) ) )  \  12 -
          ( 3 * ( ( y + 4900 + ( m - 14 )  \  12 )  \  100 ) )  \  4 +
          d - 32075;
    return jd;
};


//
// Julian date to Gregorian date
//
julian2date := procedure(jd) {
    l := jd + 68569;
    n := ( 4 * l )  \  146097;
    l := l - ( 146097 * n + 3 )  \  4;
    i := ( 4000 * ( l + 1 ) )  \  1461001;
    l := l - ( 1461 * i )  \  4 + 31;
    j := ( 80 * l )  \  2447;
    d := l - ( 2447 * j )  \  80;
    l := j  \  11;
    m := j + 2 - ( 12 * l );
    y := 100 * ( n - 49 ) + i + l;
    return [y, m, d];
};


//
// Day of week, Sakamoto's method
// http://en.wikipedia.org/wiki/Weekday_determination#Sakamoto.27s_Method
//
dow := procedure(y, m, d) {
   t := [0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4];
   if (m < 3) {
      y := y-1;
   }
   return (y + y \ 4 - y \ 100 + y \ 400 + t[m] + d) % 7;
};

problem19 := procedure() {
    sum := 0;
    for (d in [date2julian(1901,1,1) .. date2julian(2000,12,31)]) {
        dd := julian2date(d);
        if (dd[3] == 1) {
            if (dow(dd[1],dd[2],dd[3]) == 0) {
                sum := sum+1;
            }
        }
    }
    print(sum);
};


problem19();