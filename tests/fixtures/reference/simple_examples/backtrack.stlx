// this program demonstrates using the try catch block for backtracking

test := procedure(n) {
    print("n = $n$");
    check {
        // we do something here

        a := n ** n;

        // and then check if the result is correct
        checkResult(a);

        // we only get here, when the result is indeed correct
        print("done!");
    } afterBacktrack {
        // try next one
        test(n + 1);
    }
};

// backtrack if result is not as expected
checkResult := procedure(a) {
    if (a != 3125) {
        backtrack;
    }
};

test(1);

