//
// Project Euler problem 43 in SETL
//
// """
// The number, 1406357289, is a 0 to 9 pandigital number because it is made up of
// each of the digits 0 to 9 in some order, but it also has a rather interesting
// sub-string divisibility property.
//
// Let d1 be the 1st digit, d2 be the 2nd digit, and so on. In this way, we
// note the following:
//
//     * d2d3d4=406 is divisible by 2
//     * d3d4d5=063 is divisible by 3
//     * d4d5d6=635 is divisible by 5
//     * d5d6d7=357 is divisible by 7
//     * d6d7d8=572 is divisible by 11
//     * d7d8d9=728 is divisible by 13
//     * d8d9d10=289 is divisible by 17
//
// Find the sum of all 0 to 9 pandigital numbers with this property.
// """
//
// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

problem43 := procedure() {
  print("problem43");
  pp := [2, 3, 5, 7, 11, 13, 17];
  // skipping all permutations that starts with [0,..]
  s := [1, 0, 2, 3, 4, 5, 6, 7, 8, 9];
  sum := 0;
  while (s != [] && s != om) {
    s2 := +/[str(i) : i in s];
    i := 1;
    c := true;
    for (i in [1..7]) {
      if (int(s2[1+i..3+i]) % pp[i] != 0) {
        c := false;
        break;
      }
    }
    if (c) {
      print("\t", s2);
      sum := sum+int(s2);
    }

    s := nextPermutation(s);

  }

  print(sum);

};

problem43c := procedure() {
  print("problem43c");
  pp := [2, 3, 5, 7, 11, 13, 17];
  // skipping all permutations that starts with [0,..]
  s := [1, 0, 2, 3, 4, 5, 6, 7, 8, 9];
  sum := 0;
  while (s != om) {
    s2 := join(s, "");
    i := 1;
    while (i <= 7 && int(s2[1+i..3+i]) % pp[i] == 0) {
      i += 1;
    }
    if (i==8) {
      print("\t", s2);
      sum += int(s2);
    }
    s := nextPermutation(s);

  }

  print(sum);

};

problem43d := procedure() {
  print("problem43d");
  pp := [2, 3, 5, 7, 11, 13, 17];
  // skipping all permutations that starts with [0,..]
  s := [1, 0, 2, 3, 4, 5, 6, 7, 8, 9];
  sum := 0;
  ss := [1..7];
  while (s != om) {
    s2 := join(s, "");
    if (forall(i in ss | int(s2[1+i..3+i]) % pp[i] == 0)) {
      print("\t", s2);
      sum += int(s2);
    }

    s := nextPermutation(s);
  }

  print(sum);
};

problem43();
problem43c();
problem43d();
