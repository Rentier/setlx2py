// 
// Project Euler problem 2 in SETL
//
// Problem 2
// """
// Each new term in the Fibonacci sequence is generated by adding the 
// previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// Find the sum of all the even-valued terms in the sequence which do not 
// exceed four million.
// """
//
// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//


problem2a := procedure() {
  f:= [1,1]; 
  for (i in [3..100]) {
    f += [f[i-1]+f[i-2]];
  }
  print(+/[i: i in f | i % 2 == 0 && i < 4000000]);
};

problem2b := procedure() {
  f := [1,1]; 
  tot := 0;
  i := 3;
  while (tot < 4000000) {
    tmp := f[i-1] + f[i-2];
    f += [tmp];
    if (tmp % 2 == 0) {
       tot += tmp;
    }
    i += 1;
  }
  print(tot);
};


print("Problem 2: ");
problem2a();
problem2b();
